name: Testing

on: [pull_request]

jobs:
  CommitLint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - run: npm install
      - uses: wagoid/commitlint-github-action@v3
        env:
          NODE_PATH: ${{ github.workspace }}/node_modules


  Pre-Commit:
    needs: CommitLint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Set Cache Key
      run: echo "PY=$(python --version --version | sha256sum | cut -d' ' -f1)" >> $GITHUB_ENV
    - name: Install System Deps
      run: |
        sudo apt-get update
        sudo apt-get install -y libxml2 libxml2-dev libxslt-dev
    - uses: actions/cache@v2
      with:
        path: ~/.cache/pre-commit
        key: pre-commit|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}
    - uses: pre-commit/action@v2.0.3


  Docs:
    runs-on: ubuntu-latest
    needs: Pre-Commit
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.7 For Nox
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install Nox
      run: |
        python -m pip install --upgrade pip
        pip install nox

    - name: Install Doc Requirements
      run: nox --force-color -e docs --install-only

    - name: Build Docs
      env:
        SKIP_REQUIREMENTS_INSTALL: YES
      run: nox --force-color -e docs


  Ubuntu:
    needs: Pre-Commit
    strategy:
      fail-fast: false
      matrix:
        os-version:
          - 20.04
          - 18.04
        python-version:
          - 3.6
          - 3.7
          - 3.8
        salt-version:
          - 3002.6
          - 3003
    runs-on: ubuntu-${{ matrix.os-version }}

    steps:
    - uses: actions/checkout@v2

    - name: Test Matrix Identifier
      id: test
      shell: bash
      run: |
        OS_NAME="${{ runner.os }}"
        mkdir artifacts && touch artifacts/.metadata
        printf 'OS_NAME="%s"\n' "${OS_NAME%-latest}"      >> artifacts/.metadata
        printf 'OS_VER="%s"\n' "${{ matrix.os-version }}" >> artifacts/.metadata
        printf 'PY_VER="%s"\n' "${{ matrix.py-version }}" >> artifacts/.metadata
        printf 'SALT_VER="%s"\n' "{{ matrix.salt-version }}" >> artifacts/.metadata
        echo "::set-output name=id::${{ runner.os }}-${{ matrix.os-version }}-Py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}"

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Nox
      run: |
        python -m pip install --upgrade pip
        pip install nox

    - name: Install Test Requirements
      env:
        SALT_REQUIREMENT: salt==${{ matrix.salt-version }}
      run: |
        nox --force-color -e tests-3 --install-only

    - name: Test
      env:
        SALT_REQUIREMENT: salt==${{ matrix.salt-version }}
        SKIP_REQUIREMENTS_INSTALL: YES
      run: |
        nox --force-color -e tests-3 -- -vv tests/

    - name: Upload Results
      if: always()
      uses: actions/upload-artifact@main
      with:
        name: test-results-${{ steps.test.output.id }}
        path: artifacts/*


  Windows:
    needs: Pre-Commit
    strategy:
      fail-fast: false
      matrix:
        os-version:
          - 2016
          - 2019
        python-version:
          - 3.6
          - 3.7
        salt-version:
          - 3002.6
    runs-on: windows-${{ matrix.os-version }}

    steps:
    - uses: actions/checkout@v2

    - name: Test Matrix Identifier
      id: test
      shell: bash
      run: |
        OS_NAME="${{ runner.os }}"
        mkdir artifacts && touch artifacts/.metadata
        printf 'OS_NAME="%s"\n' "${OS_NAME%-latest}"      >> artifacts/.metadata
        printf 'OS_VER="%s"\n' "${{ matrix.os-version }}" >> artifacts/.metadata
        printf 'PY_VER="%s"\n' "${{ matrix.py-version }}" >> artifacts/.metadata
        printf 'SALT_VER="%s"\n' "{{ matrix.salt-version }}" >> artifacts/.metadata
        echo "::set-output name=id::${{ runner.os }}-${{ matrix.os-version }}-Py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}"

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Nox
      run: |
        python -m pip install --upgrade pip
        pip install nox

    - name: Install Test Requirements
      shell: bash
      env:
        SALT_REQUIREMENT: salt==${{ matrix.salt-version }}
        EXTRA_REQUIREMENTS_INSTALL: Cython
      run: |
        export PATH="/C/Program Files (x86)/Windows Kits/10/bin/10.0.18362.0/x64;$PATH"
        nox --force-color -e tests-3 --install-only

    - name: Test
      shell: bash
      env:
        SALT_REQUIREMENT: salt==${{ matrix.salt-version }}
        SKIP_REQUIREMENTS_INSTALL: YES
      run: |
        export PATH="/C/Program Files (x86)/Windows Kits/10/bin/10.0.18362.0/x64;$PATH"
        nox --force-color -e tests-3 -- -vv tests/

    - name: Upload Results
      if: always()
      uses: actions/upload-artifact@main
      with:
        name: runtests-${{ steps.test.outputs.id }}
        path: artifacts/runtests-*.log


  macOS:
    needs: Pre-Commit
    strategy:
      fail-fast: false
      matrix:
        os-version:
          - 10.15
        python-version:
          - 3.6
          - 3.7
        salt-version:
          - 3002.6
    runs-on: macos-${{ matrix.os-version }}

    steps:
    - uses: actions/checkout@v2

    - name: Test Matrix Identifier
      id: test
      shell: bash
      run: |
        OS_NAME="${{ runner.os }}"
        mkdir artifacts && touch artifacts/.metadata
        printf 'OS_NAME="%s"\n' "${OS_NAME%-latest}"     >> artifacts/.metadata
        printf 'OS_VER="%s"\n' "${{ matrix.os-version }}" >> artifacts/.metadata
        printf 'PY_VER="%s"\n' "${{ matrix.py-version }}" >> artifacts/.metadata
        printf 'SALT_VER="%s"\n' "{{ matrix.salt-version }}" >> artifacts/.metadata
        echo "::set-output name=id::${{ runner.os }}-${{ matrix.os-version }}-Py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}"

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Nox
      run: |
        python -m pip install --upgrade pip
        pip install nox

    - name: Install Test Requirements
      env:
        SALT_REQUIREMENT: salt==${{ matrix.salt-version }}
      run: |
        nox --force-color -e tests-3 --install-only

    - name: Test
      env:
        SALT_REQUIREMENT: salt==${{ matrix.salt-version }}
        SKIP_REQUIREMENTS_INSTALL: YES
      run: |
        nox --force-color -e tests-3 -- -vv tests/

    - name: Upload Results
      if: always()
      uses: actions/upload-artifact@main
      with:
        name: test-results-${{ runner.os }}-py${{ matrix.python-version }}-Salt${{ matrix.salt-version }}
        path: artifacts/*
